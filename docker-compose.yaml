version: '3.7'

services:
  elasticsearch:
    container_name: peliculas_es
    image: elasticsearch:7.14.2
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=peliculas
      - ELASTIC_USERNAME=peliculas
    ports:
      - 9200:9200
      - 9300:9300
    restart: always
    volumes:
      - es-data:/usr/share/elasticsearch/data

  neo4j:
    container_name: peliculas__neo4j
    build:
      context: .
      dockerfile: Dockerfile.neo4j
    environment:
      - NEO4J_AUTH=neo4j/peliculas
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_memory_pagecache_size=4G
      - NEO4J_dbms_memory_heap_max__size=3G
      - NEO4J_dbms_memory_heap_initial__size=2G
      - NEO4JLABS_PLUGINS=["apoc"]
    restart: always
    volumes:
      - neo4j-data:/data
      - neo4j-plugins:/plugins
    ports:
      - 7474:7474
      - 7687:7687

  server:
    container_name: peliculas__server
    build: .
    command: python run.py
    stdin_open: true
    tty: true
    environment:
      - NEO4J_DATABASE_USER=neo4j
      - NEO4J_DATABASE_PASSWORD=peliculas
      - NEO4J_DATABASE_HOST=neo4j
      - NEO4J_DATABASE_PORT=7687
      - ES_DATABASE_USER=peliculas
      - ES_DATABASE_PASSWORD=peliculas
      - ES_DATABASE_HOST=elasticsearch
      - ES_DATABASE_PORT=9200
      - APP_MODE=development
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5555
      - PYTHONPATH=$PYTHONPATH:/server
      - JWT_SECRET_KEY=somethingcoolhere
      - FLASK_APP=run:create_app()
      - FLASK_DEBUG=1
    volumes:
      - ./server:/server
    ports:
      - 5555:5555
    depends_on:
      - neo4j
      - elasticsearch
    restart: always

volumes:
  neo4j-data:
  neo4j-plugins:
  es-data:
